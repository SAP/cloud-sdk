"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[7795],{1191:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"features/connectivity/csrf","title":"CSRF Fetching","description":"This article describes how CSRF tokens are fetched in the SDK and how you can configure the fetching.","source":"@site/docs-js/features/connectivity/csrf.mdx","sourceDirName":"features/connectivity","slug":"/features/connectivity/csrf","permalink":"/cloud-sdk/docs/js/features/connectivity/csrf","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/connectivity/csrf.mdx","tags":[],"version":"current","frontMatter":{"id":"csrf","title":"CSRF Fetching","hide_title":false,"hide_table_of_contents":false,"sidebar_label":"CSRF Fetching","description":"This article describes how CSRF tokens are fetched in the SDK and how you can configure the fetching.","keywords":["sap","cloud","sdk","csrf","http-client","typed OData","typed OpenApi","JavaScript","TypeScript"]},"sidebar":"docsJsSidebar","previous":{"title":"Perform HTTP Requests","permalink":"/cloud-sdk/docs/js/features/connectivity/http-client"},"next":{"title":"On-Premise Systems","permalink":"/cloud-sdk/docs/js/features/connectivity/on-premise"}}');var i=t(74848),r=t(28453);const o={id:"csrf",title:"CSRF Fetching",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"CSRF Fetching",description:"This article describes how CSRF tokens are fetched in the SDK and how you can configure the fetching.",keywords:["sap","cloud","sdk","csrf","http-client","typed OData","typed OpenApi","JavaScript","TypeScript"]},c=void 0,a={},l=[{value:"Default Behaviour",id:"default-behaviour",level:2},{value:"Changing the Default",id:"changing-the-default",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"default-behaviour",children:"Default Behaviour"}),"\n",(0,i.jsxs)(n.p,{children:["The SAP Cloud SDK fetches a CSRF token for non ",(0,i.jsx)(n.code,{children:"GET"})," requests per default.\nThis is done for all clients that the SAP Cloud SDK provides:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./http-client#csrf-token-fetching",children:"generic http-client"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../odata/v2-client#handling-of-cross-site-request-forgery-tokens",children:"v2 OData clients"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../odata/v4-client#handling-of-cross-site-request-forgery-tokens",children:"v4 OData clients"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../openapi/execute-request#handling-of-cross-site-request-forgery-tokens",children:"OpenAPI clients"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If the target system does not require a token you can disable the fetching as discussed in the sections:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./http-client#csrf-token-fetching",children:"disable for http-client"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../odata/v2-client#hskip-csrf-token-handling",children:"disable for v2 OData clients"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../odata/v4-client#skip-csrf-token-handling",children:"disable for v4 OData clients"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../openapi/execute-request#skip-csrf-token-handling",children:"disable for OpenAPI clients"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In order to retrieve a token the SAP cloud SDK makes multiple calls.\nFirst it makes a request using the resource URL adding a ",(0,i.jsx)(n.code,{children:"/"})," in the end:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Request:             HEAD /resource/path/\nRequest Header:      X-CSRF-Token=fetch\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If this returns a token, execute the request with the token.\nIf not, make a second call without the ",(0,i.jsx)(n.code,{children:"/"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Request:             HEAD /resource/path\nRequest Header:      X-CSRF-Token=fetch\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If this returns a token, execute the request with the token.\nIf this also does not yield a token, the request is executed without an additional token.\nNote that the SAP Cloud SDK consider ",(0,i.jsx)(n.code,{children:"SET-COOKIE"})," headers provided the requests returning the tokens."]}),"\n",(0,i.jsxs)(n.p,{children:["Most systems will return a CSRF token independent of an additional ",(0,i.jsx)(n.code,{children:"/"})," in the end.\nHowever, we saw issues for SAP S/4HANA OnPremise systems which required the ",(0,i.jsx)(n.code,{children:"/"})," and other systems not being able to handle the slash.\nIf performance is relevant you should check:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Does the system need a CSRF token? If not disable the fetching."}),"\n",(0,i.jsxs)(n.li,{children:["Does the system fail to return a CSRF with a ",(0,i.jsx)(n.code,{children:"/"}),"? Adjust the token fetching via a middleware."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The SAP Cloud SDK will discontinue fetching CSRF tokens per default.\nFrom version 4 on you will need to add the ",(0,i.jsx)(n.code,{children:"csrf()"})," middleware to enable fetching.\nAlso, a failure in token fetching will stop the request execution and not silently be ignored."]})}),"\n",(0,i.jsx)(n.h2,{id:"changing-the-default",children:"Changing the Default"}),"\n",(0,i.jsx)(n.p,{children:"If the way the SAP Cloud SDK fetches the CSRF token does not fit your needs you can replace the default using a middleware.\nThe SAP Cloud SDK offers a default implementation which allows minor adjustments as described here:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./http-client#csrf-token-fetching",children:"disable for http-client"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../odata/v2-client#custom-csrf-token-handling",children:"disable for v2 OData clients"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../odata/v4-client#custom-csrf-token-handling",children:"disable for v4 OData clients"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../openapi/execute-request#custom-csrf-token-handling",children:"disable OpenApi clients"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In this section you will learn how to implement a custom middleware which does only a single request without a slash.\nWe will use the OData client for illustration but everything applies to the other clients as well.\nYou disable the token fetching and add a middleware:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const { businessPartnerApi } = businessPartnerService();\nbusinessPartnerApi\n  .requestBuilder()\n  .update(businessPartner)\n  .middleware([customCsrf])\n  .skipCsrfTokenFetching();\n\nfunction customCsrf(options: HttpMiddlewareOptions) {\n  return requestConfig => {\n    const csrfToken = ''; //add your logic\n    requestConfig.headers['x-csrf-token'] = csrfToken;\n    options.fn(requestConfig);\n  };\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"A basic implementation for fetching a token using a single request without a slash in the end could look like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function customCsrf(options: HttpMiddlewareOptions) {\n  return async requestConfig => {\n    const requestConfigCsrf = {\n      method: 'head',\n      headers: {\n        ...requestConfig.headers, //Authentication headers are in here\n        'x-csrf-token': 'Fetch',\n        'content-length': 0\n      },\n      url: requestConfig.url.replace(/\\/$/, '')\n    };\n\n    const response = await axios.request(requestConfigCsrf);\n\n    requestConfig.headers['x-csrf-token'] = response.headers['x-csrf-token'];\n\n    return options.fn(requestConfig);\n  };\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This implementation is meant as an example to illustrate the concept.\nIt misses many things like setting cookies provided by the first request or checking the request method."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);