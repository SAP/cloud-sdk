"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[73152],{36960:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"features/openapi/generate-client","title":"Use the OpenAPI Generator to Generate Typed Clients","description":"How to generate a client from a service definition.","source":"@site/docs-js/features/openapi/generate-openapi-client.mdx","sourceDirName":"features/openapi","slug":"/features/openapi/generate-client","permalink":"/cloud-sdk/docs/js/v4/features/openapi/generate-client","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/openapi/generate-openapi-client.mdx","tags":[],"version":"current","frontMatter":{"id":"generate-client","title":"Use the OpenAPI Generator to Generate Typed Clients","sidebar_label":"Generate an OpenAPI Client","description":"How to generate a client from a service definition.","keywords":["sap","cloud","sdk","OpenAPI","rest","connectivity","JavaScript","TypeScript"]},"sidebar":"docsJsSidebar","previous":{"title":"Overview","permalink":"/cloud-sdk/docs/js/v4/features/openapi/overview"},"next":{"title":"Execute an OpenAPI Request","permalink":"/cloud-sdk/docs/js/v4/features/openapi/execute-request"}}');var s=t(74848),r=t(28453);const o={id:"generate-client",title:"Use the OpenAPI Generator to Generate Typed Clients",sidebar_label:"Generate an OpenAPI Client",description:"How to generate a client from a service definition.",keywords:["sap","cloud","sdk","OpenAPI","rest","connectivity","JavaScript","TypeScript"]},a=void 0,l={},d=[{value:"Installation",id:"installation",level:2},{value:"Generate a Client Using the Command Line Interface",id:"generate-a-client-using-the-command-line-interface",level:2},{value:"Options",id:"options",level:2},{value:"Generate a Client Programmatically",id:"generate-a-client-programmatically",level:2},{value:"How the API Code is Generated",id:"how-the-api-code-is-generated",level:2},{value:"APIs",id:"apis",level:3},{value:"Operations",id:"operations",level:3},{value:"Configure Generated Client Structure and Naming",id:"configure-generated-client-structure-and-naming",level:3},{value:"<code>x-sap-cloud-sdk-api-name</code>",id:"x-sap-cloud-sdk-api-name",level:4},{value:"<code>x-sap-cloud-sdk-operation-name</code>",id:"x-sap-cloud-sdk-operation-name",level:4},{value:"npm Packages vs. Local clients",id:"npm-packages-vs-local-clients",level:2},{value:"Transpilation",id:"transpilation",level:2},{value:"Prettier",id:"prettier",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["REST is a common pattern to define APIs of services.\nMany SAP systems like SAP S/4HANA, SAP Concur and SAP Business Technology Platform provide their services through REST APIs.\nA common way to specify these services are ",(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI specifications"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"With the SAP Cloud SDK, you can generate typed clients for those specifications."}),"\n",(0,s.jsxs)(n.p,{children:["Check this ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v4/guides/api-business-hub-download-specification",children:"guide"})," for downloading a specification from SAP Business Accelerator Hub."]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.p,{children:["Run the command below to install the OpenAPI generator as a ",(0,s.jsx)(n.code,{children:"devDependency"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install -D @sap-cloud-sdk/openapi-generator\n"})}),"\n",(0,s.jsx)(n.h2,{id:"generate-a-client-using-the-command-line-interface",children:"Generate a Client Using the Command Line Interface"}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK generator is primarily intended to be used on the command line.\nYou can generate an OpenAPI client by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx openapi-generator --input <input> --outputDir <outputDirectory>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<input>"})," points to your specification file or a directory containing the specification(s) and ",(0,s.jsx)(n.code,{children:"<outputDirectory>"})," to the target folder where the generated client(s) will be saved."]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.code,{children:"options-per-service.json"})," file is created using the ",(0,s.jsx)(n.code,{children:"--optionsPerService"})," option."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When set to a directory path, an ",(0,s.jsx)(n.code,{children:"options-per-service.json"})," file is read from or created in the given directory."]}),"\n",(0,s.jsx)(n.li,{children:"When set to a file path, the file is read or created with the given name."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This file is used for customizing subdirectory naming and contains a mapping from the original file name to the following information:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"directoryName"}),": the name of the subdirectory the client code will be generated into."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"packageName"}),": the name of the npm package, if a package.json file is generated.\nThis information is optional."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"basePath"}),": the URL path to be prepended to the API path before every request."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This information can be adjusted manually and ensures that every run of the generator produces the same names for the generation."}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "path/to/your/service-specifications/MyService.yaml": {\n    "directoryName": "my-service",\n    "basePath": "/base/path/to/service",\n    "packageName": "my-service"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"By default, the generated clients will each contain:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["API files as ",(0,s.jsx)(n.code,{children:".ts"}),' files - one for each "API" in the service.\nSee ',(0,s.jsx)(n.a,{href:"#how-the-api-code-is-generated",children:"details"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A schema directory, containing schema files (",(0,s.jsx)(n.code,{children:".ts"}),"), one for each schema defined in the service specification."]}),"\n",(0,s.jsxs)(n.li,{children:["All of the above as transpiled sources, including JavaScript sources (",(0,s.jsx)(n.code,{children:".js"}),"), type definition files (",(0,s.jsx)(n.code,{children:".d.ts"}),") and sourcemap files (",(0,s.jsx)(n.code,{children:".js.map"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"package.json"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"tsconfig.json"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The generation always includes the TypeScript sources.\nAll other files can be excluded from the generation - see the options below."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The generator should be installed as a local dependency, because global installations hide the used generator version and cause problems when transpiling to JavaScript.\nIf you must use a globally installed generator, install the ",(0,s.jsx)(n.code,{children:"@types/node"})," and ",(0,s.jsx)(n.code,{children:"@sap-cloud-sdk/openapi"})," package in your project to make the transpilation work.\nIf you need to transpile sources without any local ",(0,s.jsx)(n.code,{children:"node_modules"}),", you must manually execute the ",(0,s.jsx)(n.code,{children:"tsc"})," compiler on your own with a custom ",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping",children:"path mapping"}),".\nSee ",(0,s.jsx)(n.a,{href:"#Options",children:"transpile"})," for more details in the options below."]})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"openapi-generator --help"})," for additional options."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.th,{style:{textAlign:"left"},children:["Option ",(0,s.jsx)("div",{style:{width:"225px"}})]}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"-i"}),",",(0,s.jsx)(n.code,{children:"--input"})," ",(0,s.jsx)(n.em,{children:"(required)"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Specify the path to the directory or file containing the OpenAPI service definition(s) to generate clients for. Accepts Swagger and OpenAPI definitions as YAML and JSON files. Throws an error if the path does not exist."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"-o"}),",",(0,s.jsx)(n.code,{children:"--outputDir"})," ",(0,s.jsx)(n.em,{children:"(required)"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Specify the path to the directory to generate the client(s) in. Each client is generated into a subdirectory within the given output directory. Creates the directory if it does not exist. Customize subdirectory naming through ",(0,s.jsx)(n.code,{children:"--optionsPerService"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--optionsPerService"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Set the path to a file containing the options per service. The configuration allows to set a ",(0,s.jsx)(n.code,{children:"directoryName"})," and ",(0,s.jsx)(n.code,{children:"packageName"})," for every service, identified by the path to the original file. It also makes sure that names do not change between generator runs. If a directory is passed, an ",(0,s.jsx)(n.code,{children:"options-per-service.json"})," file is read/created in this directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--overwrite"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Allow overwriting files, that already exist. This is useful, when running the generation regularly."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--clearOutputDir"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Remove all files in the output directory before generation. Be cautious when using this option, as it really removes EVERYTHING in the output directory."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--packageJson"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["When enabled, a ",(0,s.jsx)(n.code,{children:"package.json"}),", that specifies dependencies and scripts for transpilation and documentation generation is generated."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--include"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"''"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Include files matching the given glob into the root of each generated client directory."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"-t"}),", ",(0,s.jsx)(n.code,{children:"--transpile"}),","]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Transpile the generated TypeScript code. When enabled a default ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," will be generated and used. It emits ",(0,s.jsx)(n.code,{children:".js"}),", ",(0,s.jsx)(n.code,{children:".js.map"})," and ",(0,s.jsx)(n.code,{children:".d.ts"})," files. To configure transpilation set ",(0,s.jsx)(n.code,{children:"--tsconfig"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--tsconfig"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"default tsconfig"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Replace the default ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," by passing a path to a custom configuration. By default, a ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," is only generated when transpilation is enabled (",(0,s.jsx)(n.code,{children:"--transpile"}),"). If a directory is passed, a ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," file is read from this directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"-p"}),", ",(0,s.jsx)(n.code,{children:"--prettierConfig"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"default prettier config"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Configuration file for prettier if you want to change the default value."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--verbose"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Turn on verbose logging."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--skipValidation"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"By default, the generation fails, when there are duplicate or invalid names for operations and/or path parameters after transforming them to camel case. Set this to true to enable unique and valid name generation. The names will then be generated by appending numbers and prepending prefixes."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"-c"}),", ",(0,s.jsx)(n.code,{children:"--config"})]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Set the path to the file containing the options for generation. If other flags are used, they overwrite the options set in the configuration file. If a directory is passed, a ",(0,s.jsx)(n.code,{children:"config.json"})," file is read from this directory."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"--generateESM"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Generate ESM compatible code."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"generate-a-client-programmatically",children:"Generate a Client Programmatically"}),"\n",(0,s.jsxs)(n.p,{children:["The generator can also be executed programmatically in JavaScript or TypeScript code.\nAdd the ",(0,s.jsx)(n.code,{children:"@sap-cloud-sdk/openapi-generator"})," package to your project:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm i @sap-cloud-sdk/openapi-generator\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This package exports the ",(0,s.jsx)(n.code,{children:"generate()"})," function.\nIt takes the same options as the command-line tool and generates the same files:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { generate } from '@sap-cloud-sdk/openapi-generator'\n\nconst generatorOptions = {\n  input: 'directoryWithOpenApiFiles';\n  outputDir: 'myOutputDirectory';\n}\n\nawait generate(generatorOptions);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"how-the-api-code-is-generated",children:"How the API Code is Generated"}),"\n",(0,s.jsxs)(n.p,{children:["By default, the generator produces one service directory for every OpenAPI specification.\nThe directory name is based on the file name of the specification and is transformed to kebab case, e.g. ",(0,s.jsx)(n.code,{children:"my-service"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"apis",children:"APIs"}),"\n",(0,s.jsx)(n.p,{children:'All operations of the service are grouped into APIs based on their tags.\nA service can consist of multiple APIs.\nIf multiple tags are specified for an operation, only the first one is considered.\nIf no tags are specified, "default" is used.'}),"\n",(0,s.jsxs)(n.p,{children:["The API names are transformed by appending \"Api\" and transforming them to pascal case, e.g. 'my-tag' results in ",(0,s.jsx)(n.code,{children:"MyTagApi"}),'.\nIn case the tag already ends with "api" (case independent), one "Api" will be removed, e.g. ',(0,s.jsx)(n.code,{children:"myapi"})," results in ",(0,s.jsx)(n.code,{children:"MyApi"}),'.\nIf your tags end with "api", but this is part of the word, e.g. "okapi", you can use the OpenAPI vendor extensions and provide an explicit API name ending with "Api", e.g. "OkapiApi".\nNote, that operations are grouped into APIs based on their transformed names, not the original names.\nTherefore, tags like "my-tag" and "MyTag" are treated as the same API, "MyTagApi".']}),"\n",(0,s.jsx)(n.h3,{id:"operations",children:"Operations"}),"\n",(0,s.jsxs)(n.p,{children:["Every operation in the specification is reflected as a function of a generated API.\nThe function names are based on the ",(0,s.jsx)(n.code,{children:"operationId"})," property in the specification of the operation.\nIf no ",(0,s.jsx)(n.code,{children:"operationId"})," is given, the name is derived from the method and the path pattern, examples:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'resource'"})," with ",(0,s.jsx)(n.code,{children:"POST"})," would result in ",(0,s.jsx)(n.code,{children:"createResource"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'resource/{id}'"})," with ",(0,s.jsx)(n.code,{children:"GET"})," would result in ",(0,s.jsx)(n.code,{children:"getResourceById"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The function names are transformed to camel case, e.g. 'myFunction'.\nDuplicates within an API are handled by adding an index at the end of the name.\nIn cases where there are duplicate names, but one of the names is in camel case, this name remains as is.\nExample:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.th,{style:{textAlign:"left"},children:["Original ",(0,s.jsx)(n.code,{children:"operationId"}),"s"]}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Generated function names"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"my-function"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"myFunction2"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"myFunction"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"myFunction"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"other_function"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"otherFunction"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"configure-generated-client-structure-and-naming",children:"Configure Generated Client Structure and Naming"}),"\n",(0,s.jsx)(n.p,{children:"In case you need more flexibility when generating clients, you can use the SAP Cloud SDK's vendor extensions for OpenAPI.\nThe SAP Cloud SDK provides two extensions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#x-sap-cloud-sdk-api-name",children:(0,s.jsx)(n.code,{children:"x-sap-cloud-sdk-api-name"})})," to configure the structure and naming of the generated APIs."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#x-sap-cloud-sdk-operation-name",children:(0,s.jsx)(n.code,{children:"x-sap-cloud-sdk-operation-name"})})," to configure the generated function names."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can set those on different levels of the specification.\nThey take precedence before the default behavior."}),"\n",(0,s.jsx)(n.h4,{id:"x-sap-cloud-sdk-api-name",children:(0,s.jsx)(n.code,{children:"x-sap-cloud-sdk-api-name"})}),"\n",(0,s.jsxs)(n.p,{children:["Use this extension to configure the structure of your generated APIs.\nSetting ",(0,s.jsx)(n.code,{children:"x-sap-cloud-sdk-api-name"}),' as a property determines which operations are grouped into one API.\nNote, that the name will be transformed to pascal case with an "Api" ending, same as in the default behavior, e.g. "MyApi".\nWhen referring to the "API name", the transformed name is meant.']}),"\n",(0,s.jsx)(n.p,{children:"This extension can be set on the following levels:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Operations"}),": operations that have the same API name are grouped into one API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"On the path definitions"}),": all operations below paths with the same API name are grouped into one API"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Root of the specification"}),": all operations in the specification belong to the specified API"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This extension can be set on all these levels in the same document.\nIn these cases the most specific use of the extension takes precedence."}),"\n",(0,s.jsx)(n.h4,{id:"x-sap-cloud-sdk-operation-name",children:(0,s.jsx)(n.code,{children:"x-sap-cloud-sdk-operation-name"})}),"\n",(0,s.jsxs)(n.p,{children:["Use this extension to overwrite the default names for the generated functions.\nAs of the OpenAPI specification, this is the intent of the ",(0,s.jsx)(n.code,{children:"operationId"})," field.\nHowever, the value of this property has to be unique throughout a specification file.\nMany OpenAPI validators fail if there are duplicate ",(0,s.jsx)(n.code,{children:"operationId"}),"s.\nWith the approach of the SAP Cloud SDK OpenAPI generator this restriction might make the resulting clients more complicated than necessary.\nGiven that you have multiple APIs, it can make sense to have the same function names in different APIs, e.g. ",(0,s.jsx)(n.code,{children:"MyResource1Api.getAll()"})," and ",(0,s.jsx)(n.code,{children:"MyResource2Api.getAll()"}),".\nThe purpose of the ",(0,s.jsx)(n.code,{children:"x-sap-cloud-sdk-operation-name"})," is to allow using duplicate names across APIs, while complying with the OpenAPI specification."]}),"\n",(0,s.jsx)(n.h2,{id:"npm-packages-vs-local-clients",children:"npm Packages vs. Local clients"}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK OpenAPI client generator generates TypeScript code.\nBy default, it creates only the TypeScript sources."}),"\n",(0,s.jsxs)(n.p,{children:["If you want to use the generated client in your TypeScript code without sharing it, you can work with the default configuration.\nIf you work with JavaScript, you can enable and configure transpilation with the ",(0,s.jsx)(n.code,{children:"--transpile"})," and ",(0,s.jsx)(n.code,{children:"--tsconfig"})," flags."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to publish a generated client to an npm registry, in addition to transpiling, you will need a ",(0,s.jsx)(n.code,{children:"package.json"})," file for the client.\nYou can generate it with the ",(0,s.jsx)(n.code,{children:"--packageJson"})," flag or include a custom ",(0,s.jsx)(n.code,{children:"package.json"})," with the ",(0,s.jsx)(n.code,{children:"--include"})," flag.\nMake sure to check intellectual property regulations before publishing to a public registry."]}),"\n",(0,s.jsxs)(n.p,{children:["The generated clients depend on the ",(0,s.jsx)(n.code,{children:"@sap-cloud-sdk/openapi"})," package.\nYou have to make sure there is a local reference to this package by running:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install @sap-cloud-sdk/openapi\n"})}),"\n",(0,s.jsx)(n.h2,{id:"transpilation",children:"Transpilation"}),"\n",(0,s.jsxs)(n.p,{children:["If you installed the generator globally and want to transpile the generated code, you have to install the required dependency (or ",(0,s.jsx)(n.code,{children:"devDependency"}),") for your client (",(0,s.jsx)(n.code,{children:"sap-cloud-sdk/openapi"}),") prior to generation.\nYou do this by running:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install -D @sap-cloud-sdk/openapi\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you installed the generator as a ",(0,s.jsx)(n.code,{children:"devDependency"}),", transpilation will work without additional steps."]}),"\n",(0,s.jsx)(n.h2,{id:"prettier",children:"Prettier"}),"\n",(0,s.jsxs)(n.p,{children:["Since version 2.11.0, the SAP Cloud SDK runs prettier on the generated sources using a default prettier config.\nThe prettier formats only TypeScript files (",(0,s.jsx)(n.code,{children:".ts"})," and ",(0,s.jsx)(n.code,{children:".d.ts"}),") to avoid broken source maps.\nIf you are not happy with the configuration, you can provide a custom configuration using the ",(0,s.jsx)(n.code,{children:"--prettierConfig"})," command line argument.\nNote that this formatting is done in-memory before the generator emits the files, so no expensive additional I/O is required.\nAlternatively, you can execute a custom formatting step after the generation is finished."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that custom formatting steps could break source maps when you generate a JavaScript client (option ",(0,s.jsx)(n.code,{children:"--transpile"})," enabled).\nJavaScript clients should be excluded from formatting because the generated ",(0,s.jsx)(n.code,{children:".js"})," and ",(0,s.jsx)(n.code,{children:".map.js"})," files are not meant for humans to read."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);