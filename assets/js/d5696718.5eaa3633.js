"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[23839],{99325:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"features/mail-client/mail-client","title":"Send e-mails","description":"How to send emails from application deployed on the SAP BTP","source":"@site/docs-js/features/mail-client/mail-client.mdx","sourceDirName":"features/mail-client","slug":"/features/mail-client/","permalink":"/cloud-sdk/docs/js/v4/features/mail-client/","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/mail-client/mail-client.mdx","tags":[],"version":"current","frontMatter":{"id":"mail-client","title":"Send e-mails","sidebar_label":"Send e-mails","description":"How to send emails from application deployed on the SAP BTP","keywords":["sap","cloud","sdk","mail","email","e-mail","BTP","on-premise","JavaScript","TypeScript"]},"sidebar":"docsJsSidebar","previous":{"title":"Execute an OpenAPI Request","permalink":"/cloud-sdk/docs/js/v4/features/openapi/execute-request"},"next":{"title":"Middleware","permalink":"/cloud-sdk/docs/js/v4/features/middleware"}}');var s=i(74848),o=i(28453);const a={id:"mail-client",title:"Send e-mails",sidebar_label:"Send e-mails",description:"How to send emails from application deployed on the SAP BTP",keywords:["sap","cloud","sdk","mail","email","e-mail","BTP","on-premise","JavaScript","TypeScript"]},l=void 0,d={},r=[{value:"Installation",id:"installation",level:2},{value:"Examples",id:"examples",level:2},{value:"Send an E-Mail",id:"send-an-e-mail",level:3},{value:"Send Multiple E-Mails",id:"send-multiple-e-mails",level:3},{value:"Send E-Mails Sequentially",id:"send-e-mails-sequentially",level:4},{value:"Configure Nodemailer",id:"configure-nodemailer",level:3},{value:"Proxy",id:"proxy",level:4},{value:"On-Premise Destination",id:"on-premise-destination",level:2},{value:"What&#39;s the Difference",id:"whats-the-difference",level:3},{value:"SOCKS5 Proxy Implementation",id:"socks5-proxy-implementation",level:3},{value:"Multi-Tenancy",id:"multi-tenancy",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{type:"caution",children:[(0,s.jsx)(n.p,{children:"This package has been deprecated and is no longer maintained.\nUse at your own risk."}),(0,s.jsxs)(n.p,{children:["Alternatively, you can use the SAP Cloud SDK to fetch a mail destination and send the mail yourself.\nThis can be done, for example, by reading the SAP BTP ",(0,s.jsx)(n.a,{href:"https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/using-tcp-protocol-for-cloud-applications?locale=en-US",children:"documentation"})," or by copying the existing SAP Cloud SDK ",(0,s.jsx)(n.a,{href:"https://github.com/SAP/cloud-sdk-js/tree/v3-main/packages/mail-client/src",children:"source code"})," (just 2 files)."]})]}),"\n",(0,s.jsxs)(n.p,{children:["This documentation describes how you can send e-mails from applications deployed on the SAP BTP to your e-mail servers.\nWhen defining e-mail servers by using the destination service on the SAP BTP, both ",(0,s.jsx)(n.code,{children:"Internet"})," and ",(0,s.jsx)(n.code,{children:"OnPremise"})," destinations are supported."]}),"\n",(0,s.jsx)(n.admonition,{title:"Caution",type:"caution",children:(0,s.jsx)(n.p,{children:"Only basic auth is supported for the time being, and OAuth based authentication types are not fully tested."})}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.p,{children:["Run this command in your root directory of your project to install the ",(0,s.jsx)(n.code,{children:"mail-client"})," dependency and add it to your dependency list:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm install @sap-cloud-sdk/mail-client\n"})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"In this section you find minimal examples illustrating how to send e-mails using the SAP Cloud SDK."}),"\n",(0,s.jsx)(n.h3,{id:"send-an-e-mail",children:"Send an E-Mail"}),"\n",(0,s.jsxs)(n.p,{children:["First, create a ",(0,s.jsx)(n.code,{children:"mailConfig"})," object that contains all the essential information of an e-mail:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { sendMail, MailConfig } from '@sap-cloud-sdk/mail-client';\n\nconst mailConfig: MailConfig = {\n  from: 'from@example.com',\n  to: 'to@example.com',\n  subject: 'e-mail subject',\n  text: 'e-mail text'\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Send the e-mail by calling the ",(0,s.jsx)(n.code,{children:"sendMail()"})," function with ",(0,s.jsx)(n.code,{children:"mailConfig"})," as argument:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"sendMail({ destinationName: 'my-mail-destination' }, [mailConfig]);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The first parameter is either a ",(0,s.jsx)(n.a,{href:"pathname:///api/v3/interfaces/sap_cloud_sdk_connectivity.Destination",children:"destination"})," object or ",(0,s.jsx)(n.a,{href:"pathname:///api/v3/interfaces/sap_cloud_sdk_connectivity.DestinationFetchOptions",children:"DestinationFetchOptions"}),".\nFor productive environment, you should use the destination service on the SAP BTP and reference the destination by name, just like in the example above.\n",(0,s.jsx)(n.code,{children:"{ destinationName: 'my-mail-destination' }"})," is the minimal object that is typed as ",(0,s.jsx)(n.code,{children:"DestinationFetchOptions"}),".\nFor test environment, instead of using the ",(0,s.jsx)(n.code,{children:"DestinationFetchOptions"}),", you can also pass a complete ",(0,s.jsx)(n.code,{children:"destination"})," object."]}),"\n",(0,s.jsx)(n.admonition,{title:"Caution",type:"caution",children:(0,s.jsx)(n.p,{children:"As the destination object might contain credentials, using it in production should be avoided."})}),"\n",(0,s.jsxs)(n.p,{children:["You can read more about the abstraction of the ",(0,s.jsx)(n.code,{children:"destination"})," in the documentation ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v4/features/connectivity/destinations",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"send-multiple-e-mails",children:"Send Multiple E-Mails"}),"\n",(0,s.jsxs)(n.p,{children:["The code snippets below show how to send two e-mails with the ",(0,s.jsx)(n.code,{children:"mailConfig"})," created in the previous example.\nThe e-mails are sent in parallel by default."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"sendMail({ destinationName: 'my-mail-destination' }, [mailConfig, mailConfig]);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"send-e-mails-sequentially",children:"Send E-Mails Sequentially"}),"\n",(0,s.jsxs)(n.p,{children:["Sometimes you prefer sending e-mails sequentially instead of parallelly due to, e.g., the rate limit of your e-mail server.\nTo send e-mails in a sequence, set the ",(0,s.jsx)(n.code,{children:"parallel"})," option to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"sendMail({ destinationName: 'my-mail-destination' }, [mailConfig, mailConfig], {\n  sdkOptions: {\n    parallel: false\n  }\n});\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["As parallelization is the default behaviour, you don't have to set ",(0,s.jsx)(n.code,{children:"parallel: true"})," explicitly."]})}),"\n",(0,s.jsx)(n.h3,{id:"configure-nodemailer",children:"Configure Nodemailer"}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK uses the node package Nodemailer under the hood.\nNodemailer supports creating a transport based on options listed in their ",(0,s.jsx)(n.a,{href:"https://nodemailer.com/smtp/",children:"documentation"}),".\nThe SAP Cloud SDK exposes these options (as ",(0,s.jsx)(n.code,{children:"SmtpTransportOptions"}),") and will transfer them based on user input.\nFor example, you can provide the TLS option like below to circumvent issues with self-signed certificates:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"sendMail({ destinationName: 'my-mail-destination' }, [mailConfig], {\n  tls: {\n    rejectUnauthorized: false\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK API documentation of the complete ",(0,s.jsx)(n.code,{children:"SmtpTransportOptions"})," can be found in the API doc ",(0,s.jsx)(n.a,{href:"pathname:///api/v3/interfaces/sap_cloud_sdk_mail_client.SmtpTransportOptions",children:"here"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"DEBUGGING OPTIONS",type:"tip",children:(0,s.jsxs)(n.p,{children:["Set ",(0,s.jsx)(n.code,{children:"debug"})," and ",(0,s.jsx)(n.code,{children:"logger"})," options to true to log all the data that is passed to the server in the console.\nThe debug option logs SMTP traffic when true, otherwise only transaction events are logged.\nIf ",(0,s.jsx)(n.code,{children:"logger"})," is not set or set to false, nothing gets logged."]})}),"\n",(0,s.jsx)(n.h4,{id:"proxy",children:"Proxy"}),"\n",(0,s.jsxs)(n.p,{children:["Nodemailer also supports defining proxy option as mentioned ",(0,s.jsx)(n.a,{href:"https://nodemailer.com/smtp/proxies/",children:"here"}),".\nSimilar to other Nodemailer options, the ",(0,s.jsx)(n.code,{children:"proxy"})," key is also part of the ",(0,s.jsx)(n.code,{children:"SmtpTransportOptions"}),".\nYou can find a minimal example below for defining an HTTP proxy:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"sendMail({ destinationName: 'my-mail-destination' }, [mailConfig], {\n  proxy: 'http://my-proxy-host:1234'\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Using socks proxy is not supported for the time being.\nFor on-premise connectivity via the connectivity service on the SAP BTP, please check the next section."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"The SAP Cloud SDK will pass the proxy option directly to the Nodemailer, but the proxy feature is not end-to-end tested."})}),"\n",(0,s.jsx)(n.h2,{id:"on-premise-destination",children:"On-Premise Destination"}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK supports using on-premise destinations as well.\nFrom the SAP Cloud SDK API perspective, the code looks similar, no matter whether you use ",(0,s.jsx)(n.code,{children:"OnPremise"})," destinations or ",(0,s.jsx)(n.code,{children:"Internet"})," destinations.\nThe only difference is that you have to reference the name of the on-premise destination, which is obvious."]}),"\n",(0,s.jsx)(n.h3,{id:"whats-the-difference",children:"What's the Difference"}),"\n",(0,s.jsxs)(n.p,{children:["First, for applications deployed on the SAP BTP, you need a connectivity service for connecting to an on-premise destination.\nSecond, a cloud connector is used as a proxy for accessing the on-premise system.\nPlease make sure the mail destination is configured correctly as discussed in the ",(0,s.jsx)(n.a,{href:"https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/create-mail-destinations",children:"documentation"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"socks5-proxy-implementation",children:"SOCKS5 Proxy Implementation"}),"\n",(0,s.jsxs)(n.p,{children:["Using a SOCKS5 proxy for accessing on-premise systems from applications on SAP BTP requires the SOCKS5 authentication flow as explained ",(0,s.jsx)(n.a,{href:"https://help.sap.com/docs/CP_CONNECTIVITY/cca91383641e40ffbe03bdc78f00f681/cd1583775afa43f0bb9ec69d9dbcc880.html?locale=en-US",children:"here"}),".\nThe SAP Cloud SDK handles the SOCKS5 proxy implementation automatically when detecting an on-premise mail destination."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["For some on-premise e-mail servers, including the test server, the parallelization of sending e-mail might be a challenge.\nYou can disable the parallelization by passing ",(0,s.jsx)(n.code,{children:"parallel: false"})," as mentioned above."]})}),"\n",(0,s.jsx)(n.h3,{id:"multi-tenancy",children:"Multi-Tenancy"}),"\n",(0,s.jsx)(n.p,{children:"If you are setting up a multi-tenant application where subscriber tenants access a mail destination through their SAP Cloud Connector (SCC), you must include the user's JSON Web Token (JWT) in your call."}),"\n",(0,s.jsx)(n.p,{children:"An example in which the incoming request contains the user's JWT looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { retrieveJwt } from '@sap-cloud-sdk/connectivity';\nsendMail(\n  { destinationName: 'my-mail-destination', jwt: retrieveJwt(request) },\n  [mailConfig]\n);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);