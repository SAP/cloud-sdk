"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[61087],{99593:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"features/connectivity/destinations","title":"Destinations","description":"This article describes how destinations are fetched in the SDK and how they can be configured.","source":"@site/docs-js/features/connectivity/destination.mdx","sourceDirName":"features/connectivity","slug":"/features/connectivity/destinations","permalink":"/cloud-sdk/docs/js/features/connectivity/destinations","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/cloud-sdk/edit/main/docs-js/features/connectivity/destination.mdx","tags":[],"version":"current","frontMatter":{"id":"destinations","title":"Destinations","hide_title":false,"hide_table_of_contents":false,"sidebar_label":"Destinations","description":"This article describes how destinations are fetched in the SDK and how they can be configured.","keywords":["sap","cloud","sdk","destination","connectivity","JavaScript","TypeScript"]},"sidebar":"docsJsSidebar","previous":{"title":"OData v4 Client API","permalink":"/cloud-sdk/docs/js/features/odata/v4-client"},"next":{"title":"Destination Cache","permalink":"/cloud-sdk/docs/js/features/connectivity/destination-cache"}}');var s=t(74848),o=t(28453),r=t(86025);const a={id:"destinations",title:"Destinations",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Destinations",description:"This article describes how destinations are fetched in the SDK and how they can be configured.",keywords:["sap","cloud","sdk","destination","connectivity","JavaScript","TypeScript"]},d=void 0,c={},l=[{value:"Referencing Destinations by Name",id:"referencing-destinations-by-name",level:2},{value:"Local Environment Variable",id:"local-environment-variable",level:3},{value:"Testing with Local Environment Variables",id:"testing-with-local-environment-variables",level:4},{value:"Register Destination",id:"register-destination",level:3},{value:"Using Mutual TLS authentication (mTLS) on Cloud Foundry",id:"using-mutual-tls-authentication-mtls-on-cloud-foundry",level:4},{value:"Destination Service",id:"destination-service",level:3},{value:"Authentication and JSON Web Token (JWT) Retrieval",id:"authentication-and-json-web-token-jwt-retrieval",level:4},{value:"Multi-Tenancy",id:"multi-tenancy",level:4},{value:"Destination Lookup Without a JSON Web Token (JWT)",id:"destination-lookup-without-a-json-web-token-jwt",level:4},{value:"Getting All Destinations",id:"getting-all-destinations",level:3},{value:"Destination Fetch Options",id:"destination-fetch-options",level:3},{value:"Destination Properties",id:"destination-properties",level:2},{value:"SAP Client",id:"sap-client",level:3},{value:"Trust Configuration",id:"trust-configuration",level:3},{value:"JWT Validation",id:"jwt-validation",level:3},{value:"Additional Headers and Query Parameters on Destinations",id:"additional-headers-and-query-parameters-on-destinations",level:3},{value:"Forwarding Auth Tokens",id:"forwarding-auth-tokens",level:3},{value:"<code>HTML5.ForwardAuthToken</code> vs. <code>forwardAuthToken</code>",id:"html5forwardauthtoken-vs-forwardauthtoken",level:4},{value:"Rules of Precedence",id:"rules-of-precedence",level:4},{value:"Creating Destinations Manually",id:"creating-destinations-manually",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Destinations represent information about a target system.\nA destination is an object with the following information, among others:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"URL"}),"\n",(0,s.jsx)(n.li,{children:"authentication configuration"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/features/connectivity/proxies",children:"proxy settings"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Destinations in the SAP Cloud SDK are based on the SAP Business Technology Platform (SAP BTP) concept of destinations for convenient communication between SAP BTP and other systems.\nOn SAP BTP, destinations are managed separately from applications and can be retrieved through the destination service at runtime.\nSome reasons to separate destinations and the application are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You can securely store authentication information that should not be part of the application code."}),"\n",(0,s.jsx)(n.li,{children:"You can update resource locations without touching the application code."}),"\n",(0,s.jsx)(n.li,{children:"Different customers may want to configure different systems."}),"\n",(0,s.jsx)(n.li,{children:"Multiple applications might want to access the same systems."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.a,{href:"pathname:///api/v4/interfaces/sap-cloud-sdk_connectivity.Destination.html",children:"destinations"})," to execute ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/features/connectivity/http-client",children:"arbitrary requests"}),", ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/features/odata/overview",children:"OData requests"}),", and ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/features/openapi/overview",children:"OpenAPI requests"}),".\nThe following examples use ",(0,s.jsx)(n.code,{children:"req.execute()"}),", assuming req is an OData or OpenAPI request, to demonstrate options for the destination lookup.\nThe same options apply to ",(0,s.jsx)(n.code,{children:"executeHttpRequest()"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"referencing-destinations-by-name",children:"Referencing Destinations by Name"}),"\n",(0,s.jsxs)(n.p,{children:["To reference a destination, pass an object with ",(0,s.jsx)(n.code,{children:"destinationName"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await req.execute({ destinationName: 'DESTINATION' });\n"})}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK searches for the destination by its name in the following locations and order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"local environment variables"}),"\n",(0,s.jsx)(n.li,{children:"destinations registered in the SAP Cloud SDK"}),"\n",(0,s.jsx)(n.li,{children:"service binding environment variables"}),"\n",(0,s.jsx)(n.li,{children:"SAP BTP's destination service"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The search stops once a matching destination is found, even if other locations may contain another matching destination."}),"\n",(0,s.jsx)(n.h3,{id:"local-environment-variable",children:"Local Environment Variable"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["You should use this option ",(0,s.jsx)(n.strong,{children:"only for testing purposes in local environments"})," outside the SAP BTP where no destination service is available.\nIf you want to cache destinations in production, use ",(0,s.jsx)(n.a,{href:"#register-destination",children:(0,s.jsx)(n.code,{children:"registerDestination()"})})," instead."]})}),"\n",(0,s.jsxs)(n.p,{children:["You can provide destinations in the ",(0,s.jsx)(n.code,{children:"destinations"})," environment variable.\nThe value of the environment variable is expected to be a stringified JSON array, where the items adhere to the ",(0,s.jsx)(n.a,{href:"pathname:///api/v4/interfaces/sap-cloud-sdk_connectivity.Destination.html",children:"Destination interface"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'"[{\\"name\\": \\"TESTINATION\\", \\"url\\": \\"http://url.hana.ondemand.com\\", \\"username\\": \\"DUMMY_USER\\", \\"password\\": \\"EXAMPLE_PASSWORD\\"}]"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["At runtime, the SAP Cloud SDK will check the environment variable for a destination with the given name and use it, if present.\nThis allows you to use different destinations in different environments, e.g. a destination from the destination service in production and a destination from the ",(0,s.jsx)(n.code,{children:"destinations"})," environment variable for local development."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Note that this approach is ",(0,s.jsx)(n.strong,{children:"not suitable for multi-tenant scenarios"}),"."]})}),"\n",(0,s.jsx)(n.h4,{id:"testing-with-local-environment-variables",children:"Testing with Local Environment Variables"}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK provides a ",(0,s.jsx)(n.code,{children:"setTestDestination()"})," function to add a destination to the environment variable for the current process programmatically.\nIt takes a ",(0,s.jsx)(n.a,{href:"pathname:///api/v4/interfaces/sap-cloud-sdk_connectivity.Destination.html",children:"destination object"}),", transforms it to a JSON object, and adds it to ",(0,s.jsx)(n.code,{children:"process.env.destinations"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { setTestDestination } from '@sap-cloud-sdk/test-util';\n\nsetTestDestination({\n  authentication: 'NoAuthentication',\n  name: 'TESTINATION',\n  isTrustingAllCertificates: false,\n  url: 'https://example.com'\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:['In the above example, a destination with the name "TESTINATION" is added to the ',(0,s.jsx)(n.code,{children:"destination"})," environment variable."]}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK also offers a ",(0,s.jsx)(n.code,{children:"mockTestDestination()"})," method, which reads in a ",(0,s.jsx)(n.code,{children:"systems.json"})," and ",(0,s.jsx)(n.code,{children:"credentials.json"})," to create destinations.\nThe advantage of files is that they can be excluded from the repository, if they contain sensitive information."]}),"\n",(0,s.jsx)(n.h3,{id:"register-destination",children:"Register Destination"}),"\n",(0,s.jsx)(n.p,{children:"You can provide named destinations to your application, by registering them in your application.\nThis is particularly helpful for service-to-service communication, where authentication is handled within a cluster and reaching out to the destination service would cause unnecessary overhead."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { registerDestination } from '@sap-cloud-sdk/connectivity';\n\nawait registerDestination(\n  {\n    name: 'DESTINATION',\n    url: 'https://example.com'\n  },\n  options\n);\n\nawait req.execute({ destinationName: 'DESTINATION' });\n"})}),"\n",(0,s.jsxs)(n.p,{children:['In the example above a destination is registered under the name "DESTINATION" using ',(0,s.jsx)(n.code,{children:"regsiterDestination()"}),".\nAfter that, you can reference this destination by passing its name."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["You can register a full destination object, including authentication, but it is ",(0,s.jsx)(n.strong,{children:"not recommended"})," to store authentication information in the registered destination.\nInstead, you should enable token forwarding on the destination."]})}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.a,{href:"#forwarding-auth-token",children:"token forwarding"})," the token used to execute the request is sent to the destination:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const destination = {\n  name: 'FORWARD-DESTINATION',\n  url: 'https://example.com',\n  forwardAuthToken: true\n};\n\nregisterDestination(destination, options);\n\nreq.execute({\n  destinationName: 'FORWARD-DESTINATION',\n  jwt: 'forwardedJwt'\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that the ",(0,s.jsx)(n.code,{children:"registerDestination()"})," function is tenant-aware.\nThe ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/features/connectivity/destination-cache",children:"destination cache guide"})," describes the cache options used by the ",(0,s.jsx)(n.code,{children:"registerDestination()"})," function."]}),"\n",(0,s.jsx)(n.h4,{id:"using-mutual-tls-authentication-mtls-on-cloud-foundry",children:"Using Mutual TLS authentication (mTLS) on Cloud Foundry"}),"\n",(0,s.jsxs)(n.p,{children:["Using ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Mutual_authentication#mTLS",children:"mTLS"})," means that both the client and the server check each other's TLS certificate.\nThis might be a requirement in some microservice-based deployments."]}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK for JavaScript supports registering destinations with mTLS on Cloud Foundry based on ",(0,s.jsx)(n.a,{href:"https://docs.cloudfoundry.org/devguide/deploy-apps/instance-identity.html",children:"Instance Identity Credentials"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Set the ",(0,s.jsx)(n.code,{children:"inferMtls"})," option to ",(0,s.jsx)(n.code,{children:"true"})," in the ",(0,s.jsx)(n.code,{children:"RegisterDestinationOptions"})," object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"const options: RegisterDestinationOptions = {\n  inferMtls: true\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This configures HTTPS requests to automatically check for the ",(0,s.jsx)(n.code,{children:"CF_INSTANCE_CERT"})," and ",(0,s.jsx)(n.code,{children:"CF_INSTANCE_KEY"})," environment variables and read the certificate and key."]}),"\n",(0,s.jsxs)(n.p,{children:["The caching of mTLS certificates is disabled by default, but can be enabled by adding the ",(0,s.jsx)(n.code,{children:"useMtlsCache"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'const options: RegisterDestinationOptions = {\n  inferMtls: true,\n  useMtlsCache: true\n};\n\n\nCertificates are then cached for the entire validity time of the certificate.\nSince in Cloud Foundry each deployment has their own mTLS certificate, the cache is shared among all tenants of a deployment.\n\n### Service Binding Environment Variables\n\nThe service bindings (also known as the `VCAP_SERVICES` environment variable) represent services bound to the application.\nYou can consume bound services as destinations to execute requests against those services.\nWhen you execute a request against a bound service, the name of the destination is the service instance name.\nThe SAP Cloud SDK retrieves the according service binding and passes it to a callback function, that transforms the service to a destination.\n\nThe SAP Cloud SDK provides a default implementation for the transformation of service bindings of the following types:\n\n- `business-logging`\n- `s4-hana-cloud`\n- `destination`\n- `saas-registry`\n- `workflow`\n- `service-manager`\n- `xsuaa`\n- `aicore`\n\nThe default implementation also retrieves a service token, if needed.\n\nAdditionally, if the service binding follows the structure, we provide a transform function `transformServiceBindingToClientCredentialsDestination()` to transform the service binding to an `OAuth2ClientCredentials` destination.\n\n```json\n{\n  "VCAP_SERVICES": {\n    "custom-service": [\n      {\n        "name": "my-custom-service",\n        "label": "custom-service",\n        "tags": ["custom-service"],\n        "url": "https://example.com",\n        "credentials": {\n          "clientid": "CLIENT_ID",\n          "clientsecret": "CLIENT_SECRET"\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The following example shows how to retrieve an ",(0,s.jsx)(n.code,{children:"OAuth2ClientCredentials"})," destination from a service binding with retrieved JWT from the incoming request, and a custom URL:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const userJwt = retrieveJwt(request);\nconst destination = getDestinationFromServiceBinding({\n  destinationName: 'my-custom-service',\n  jwt: userJwt,\n  useCache: true,\n  serviceBindingTransformFn: async (service, options) => transformServiceBindingToClientCredentialsDestination({\n    service,\n    {\n      ...options,\n      url: 'https://example.com'\n    }\n  })\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For a different service binding structure, write your own transform function of type ",(0,s.jsx)(n.code,{children:"ServiceBindingTransformFunction"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"For example, if you have the following binding for a custom service:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "VCAP_SERVICES": {\n    "custom-service": [\n      // This is the `service` object passed to `serviceBindingTransformFn()` function.\n      {\n        "name": "my-custom-service",\n        "label": "custom-service",\n        "credentials": {\n          "url": "https://example.com",\n          "usr": "USERNAME",\n          "pwd": "PASSWORD"\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can write the following ",(0,s.jsx)(n.code,{children:"serviceBindingTransformFn()"}),' to create a destination with authentication type "BasicAuthentication".']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await req.execute({\n  destinationName: 'my-custom-service',\n  serviceBindingTransformFn: async (service, options) => ({\n    url: service.credentials.sys,\n    authentication: 'BasicAuthentication',\n    username: service.credentials.usr,\n    password: service.credentials.pwd\n  })\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note, that if your ",(0,s.jsx)(n.code,{children:"serviceBindingTransformFn()"})," function does not provide a name in the transformed destination, it will automatically be inferred from the given destination name, i.e. 'my-custom-service' in the example above."]}),"\n",(0,s.jsxs)(n.p,{children:["More advanced examples with service token fetching can be found in ",(0,s.jsx)(n.a,{href:"https://github.com/SAP/cloud-sdk-js/blob/main/packages/connectivity/src/scp-cf/destination/service-binding-to-destination.ts",children:"service-binding-to-destination.ts"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to skip the destination lookup and consider only the service bindings, call the ",(0,s.jsx)(n.a,{href:"pathname:///api/v4/functions/sap-cloud-sdk_connectivity.getDestinationFromServiceBinding.html",children:"getDestinationFromServiceBinding()"})," function with the service name and options."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const destination = getDestinationFromServiceBinding({\n  destinationName: 'my-service-name',\n  serviceBindingTransformFn,\n  jwt: 'jwt',\n  useCache: false\n});\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Creating destinations from service bindings",type:"info",children:[(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK provides the ",(0,s.jsx)(n.code,{children:"getServiceBinding()"})," function to retrieve the first service binding from ",(0,s.jsx)(n.code,{children:"VCAP_SERVICES"})," for a given service type.\nIt also provides the ",(0,s.jsx)(n.code,{children:"transformServiceBindingToDestination()"})," function to transform known service bindings to destinations."]}),(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Example Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  getServiceBinding,\n  transformServiceBindingToDestination\n} from '@sap-cloud-sdk/connectivity';\n\nconst service = getServiceBinding('aicore');\n\nawait transformServiceBindingToDestination(service);\n"})})]}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"transformServiceBindingToDestination()"})," supports the ",(0,s.jsx)(n.a,{href:"#service-binding-environment-variables",children:"default service types"})," as listed above."]}),(0,s.jsxs)(n.p,{children:["The transformation includes auth token flows for destinations with type ",(0,s.jsx)(n.code,{children:"OAuth2ClientCredentials"})," and adds retrieved tokens to the destination.\nIf the provided service binding is not supported, an error is thrown."]})]}),"\n",(0,s.jsx)(n.h3,{id:"destination-service",children:"Destination Service"}),"\n",(0,s.jsxs)(n.p,{children:["In a productive environment, in most cases you will use the ",(0,s.jsx)(n.a,{href:"https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/7e306250e08340f89d6c103e28840f30.html",children:"destination service"})," to retrieve destinations."]}),"\n",(0,s.jsx)(n.h4,{id:"authentication-and-json-web-token-jwt-retrieval",children:"Authentication and JSON Web Token (JWT) Retrieval"}),"\n",(0,s.jsxs)(n.p,{children:["To access the destination service, the SAP Cloud SDK will first fetch an access token from the XSUAA service.\nThe token retrieved from the XSUAA service is used to make a call to the destination service and receive the destinations.\nThe destination service returns a destination with all relevant authentication information depending on the used authentication flow.\nListed below are the supported authentication flows in SAP Cloud SDK, categorized based on whether a user JWT (",(0,s.jsx)(n.code,{children:"jwt"})," property in ",(0,s.jsx)(n.a,{href:"#destination-fetch-options",children:"destination fetch options"}),") is required to retrieve a destination."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"No user JWT required"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NoAuthentication"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"BasicAuthentication"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"OAuth2ClientCredentials"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"OAuth2Password"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ClientCertificateAuthentication"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"OAuth2RefreshToken"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"User JWT required"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"OAuth2UserTokenExchange"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"OAuth2JWTBearer"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"OAuth2SAMLBearerAssertion"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PrincipalPropagation"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK automatically parses the response of the destination service and uses the provided authentication information for the request to the target system.\nFor a simple service, this would be the end of the story."}),"\n",(0,s.jsx)(n.h4,{id:"multi-tenancy",children:"Multi-Tenancy"}),"\n",(0,s.jsx)(n.p,{children:"However, the destination service is special in the way that it is a tenant-aware service.\nSuch services make it possible to build multi-tenant applications.\nSo, what defines a tenant-aware service?"}),"\n",(0,s.jsx)(n.p,{children:"Assume you want to build an application showing the five newest business partners in an SAP S/4HANA system.\nYou want to offer this application as a service to customers.\nOf course, you want to make this service cost-efficient and host it only once and let multiple customers use it.\nThis means your service needs to return the data related to specific customers.\nA customer is represented by an account on the SAP BTP.\nA service considering that account is a tenant-aware service."}),"\n",(0,s.jsx)(n.p,{children:'Tenant-aware services on the SAP BTP are offered to customers via a subscription which works on a high level as follows:\nIf a customer wants to use a service, a subscription is created linking the customer account and the one account hosting the service.\nIn the following, the term "subscriber account" will be used for the accounts using a service and "provider account" for the one hosting it.'}),"\n",(0,s.jsx)(n.p,{children:"For simplicity, an optional argument of the destination lookup has been neglected in the beginning:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await req.execute({ destinationName: 'DESTINATION', jwt: '<JWT>' });\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"jwt"})," argument takes the JSON web token (JWT) issued by an XSUAA as input.\nAdditional information on how to retrieve JWTs can be found ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/guides/retrieve-jwt",children:"here"}),".\nThis token contains a field ",(0,s.jsx)(n.code,{children:"zid"})," holding the tenant id, which will be used in the lookup process.\nThe lookup process done by the SAP Cloud SDK involves the following steps:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Request an access token for the destination service and a given tenant ID from the XSUAA."}),"\n",(0,s.jsx)(n.li,{children:"Due to the subscription between provider and subscriber, the XSUAA is allowed to issue the token."}),"\n",(0,s.jsx)(n.li,{children:"The token allows for calling the destination service on behalf of the given tenant.\nThe tenant and service information is encoded in the access token."}),"\n",(0,s.jsx)(n.li,{children:"Make a call to the destination service using the obtained access token."}),"\n",(0,s.jsx)(n.li,{children:"The destination maintained in the given tenant is returned."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If no token is given or the destination is not found in the subscriber account, the provider account is used as a fallback.\nTo control this fallback behavior, a selection strategy can be passed to the destination lookup:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { alwaysSubscriber } from '@sap-cloud-sdk/connectivity';\n\nawait req.execute({\n  destinationName: 'DESTINATION',\n  jwt: 'yourJWT',\n  selectionStrategy: alwaysSubscriber\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK defines the following selection strategies:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"alwaysSubscriber"}),": Only try to get destinations from the subscriber account.\nA valid JWT is mandatory to receive something."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"alwaysProvider"}),": Only try to get the destination from the provider account.\nA JWT is not needed.\nEven if you present a subscriber JWT, the provider destination will be returned if present."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"subscriberFirst"}),": Tries to get from the subscriber first using the JWT.\nIf no valid JWT is provided or the destination is not found, it tries the provider as described for ",(0,s.jsx)(n.code,{children:"AlwaysProvider"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The selection strategy can be passed as an optional argument to the ",(0,s.jsx)(n.code,{children:"execute()"})," method.\nThe default value is ",(0,s.jsx)(n.code,{children:"subscriberFirst"}),".\nThe selection strategies can be used to control for which account a destination lookup is attempted:"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"In principle, it is possible to define destinations not only on the account level but also on the destination service level.\nThese destinations are called instance destinations since they are tied to a service binding called instance on SAP BTP.\nIn every request, these destinations are added to the destinations returned by the destination service."})}),"\n",(0,s.jsx)(n.h4,{id:"destination-lookup-without-a-json-web-token-jwt",children:"Destination Lookup Without a JSON Web Token (JWT)"}),"\n",(0,s.jsxs)(n.p,{children:["There are situations where you do not have a JWT issued by the XSUAA but need to look up a destination, e.g., in background processes.\nIn such situations, the property ",(0,s.jsx)(n.code,{children:"iss"})," of the ",(0,s.jsx)(n.code,{children:"DestinationAccessorOptions"})," can be used:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await req.execute({ destinationName: 'DESTINATION', iss: yourIssuerValue });\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The value for ",(0,s.jsx)(n.code,{children:"iss"})," is supposed to be the same as in a JWT issued from the XSUAA, e.g., ",(0,s.jsx)(n.code,{children:"https://yourSubdomain.localhost:8080/uaa/oauth/token"}),".\nIn principle, only the host of the URL is relevant, but since the same parsing and replacement methods are used for the JWT handling, the URL has to be provided in the format above."]}),"\n",(0,s.jsxs)(n.p,{children:["Some destinations have ",(0,s.jsx)(n.a,{href:"#authentication-and-json-web-token-jwt-retrieval",children:"user-related authentication flows"})," and require user information to be present.\nWhen working with the ",(0,s.jsx)(n.code,{children:"iss"})," property, you can add a JWT to include user information.\nThis will be used to identify the user in the ",(0,s.jsx)(n.code,{children:"x-user-token"})," header in the request to the destination service."]}),"\n",(0,s.jsxs)(n.admonition,{type:"danger",children:[(0,s.jsxs)(n.p,{children:["If only a JWT is used in the destination lookup, it is validated.\nThis validation ensures that the JWT has not been manipulated.\nIf ",(0,s.jsx)(n.code,{children:"iss"})," is provided, no such validation is performed."]}),(0,s.jsxs)(n.p,{children:["Note that the given subdomain value defines from which tenant destinations are fetched.\n",(0,s.jsx)(n.strong,{children:"A wrong value may break the isolation for tenants."})]})]}),"\n",(0,s.jsx)(n.h3,{id:"getting-all-destinations",children:"Getting All Destinations"}),"\n",(0,s.jsxs)(n.p,{children:["The SAP Cloud SDK supports getting all destinations only from the destination service.\nThis is possible through the ",(0,s.jsx)(n.code,{children:"getAllDestinationsFromDestinationService()"})," function.\nBased on the provided JWT, you will either receive all subscriber or provider destinations."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { getAllDestinationsFromDestinationService } from '@sap-cloud-sdk/connectivity';\n\n// Will attempt to get all provider destinations\ngetAllDestinationsFromDestinationService();\n\n// Will attempt to get all subscriber destinations\ngetAllDestinationsFromDestinationService(subscriberJWT);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It is important to note that these destinations won't contain an authentication token.\nIf you need the token, call the specific destination with ",(0,s.jsx)(n.code,{children:"getDestination({destinationName: yourDestination})"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"destination-fetch-options",children:"Destination Fetch Options"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"execute()"}),", ",(0,s.jsx)(n.code,{children:"getDestination()"}),", and ",(0,s.jsx)(n.code,{children:"executeHttpRequest()"})," functions perform a destination lookup by name as discussed above.\nYou can pass options to adjust how the destination is fetched.\nA few of the options were already listed above, but this section gives a comprehensive overview:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"destinationName"}),": The name of the destination to be fetched.\nThis is the only mandatory property, all the other parameters are optional."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"serviceBindingTransformFn"}),": A custom transformation function to control how a ",(0,s.jsx)(n.code,{children:"Destination"})," is built from the given ",(0,s.jsx)(n.code,{children:"Service"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"jwt"}),": The JSON Web Token.\nThe property is mandatory in the following cases:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["User-dependent authentication flow is used, e.g., ",(0,s.jsx)(n.code,{children:"OAuth2UserTokenExchange"}),", ",(0,s.jsx)(n.code,{children:"OAuth2JWTBearer"}),", ",(0,s.jsx)(n.code,{children:"OAuth2SAMLBearerAssertion"}),", ",(0,s.jsx)(n.code,{children:"SAMLAssertion"})," or ",(0,s.jsx)(n.code,{children:"PrincipalPropagation"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Multi-tenant scenarios with destinations maintained in the subscriber account. This case is implied if the ",(0,s.jsx)(n.code,{children:"selectionStrategy"})," is set to ",(0,s.jsx)(n.code,{children:"alwaysSubscriber"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"iss"}),": Issuer URL which can be used to obtain destination for a subscriber tenant if no JWT is present.\nRead the detailed documentation above before using this option."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"refreshToken"}),": A refresh token.\nIs used to fetch a new access token without performing the original authentication flow.\nIt has a longer validity compared to access tokens.\nThis field is mandatory for destinations with authentication type ",(0,s.jsx)(n.code,{children:"OAuth2RefreshToken"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"selectionStrategy"}),": Specifies the order in which accounts are searched for a destination.\nDefault is ",(0,s.jsx)(n.code,{children:"subscriberFirst"}),".\nAlternative values are ",(0,s.jsx)(n.code,{children:"alwaysProvider"})," and ",(0,s.jsx)(n.code,{children:"alwaysSubscriber"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"iasToXsuaaTokenExchange"}),": Switches on token exchange from IAS format tokens to XSUAA if needed using the ",(0,s.jsx)(n.code,{children:"@sap/xssec"})," library.\nThe default value is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cacheVerificationKeys"}),": Switches on caching for the verification certificates for the JWT.\nThe default value is ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"useCache"}),": Switches on caching for destinations received from the destination service.\nThe default value is ",(0,s.jsx)(n.code,{children:"true"}),". You can set it to ",(0,s.jsx)(n.code,{children:"false"})," to disable caching."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isolationStrategy"}),": Specifies how the destination cache is scoped.\nThe value is automatically set but ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/features/connectivity/destination-cache",children:"under certain conditions"})," you may want to optimize it."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"retry"}),": Switches on three retries for the request to the destination service.\nThe retries apply only to the call that performs the token exchange, which may be flaky, depending on the token endpoint.\nThe default value is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"destination-properties",children:"Destination Properties"}),"\n",(0,s.jsx)(n.p,{children:"The destination object may contain additional properties.\nThe properties change the behavior of how the SAP Cloud SDK handles the HTTP request at runtime."}),"\n",(0,s.jsx)(n.h3,{id:"sap-client",children:"SAP Client"}),"\n",(0,s.jsxs)(n.p,{children:["The property ",(0,s.jsx)(n.code,{children:"sap-client"})," is considered by the SAP Cloud SDK.\nWhen this property is set, it is used as the header parameter ",(0,s.jsx)(n.code,{children:"sap-client"})," with the specified value in the HTTP request to the target system."]}),"\n",(0,s.jsx)("img",{alt:"SAP client property on destination",src:(0,r.Ay)("img/destination-property-sap-client.png"),className:"center"}),"\n",(0,s.jsx)(n.h3,{id:"trust-configuration",children:"Trust Configuration"}),"\n",(0,s.jsx)(n.p,{children:"By default, SAP BTP only trusts certain certificate authorities.\nIf you want to make HTTPS requests against systems that use certificates from other certificate authorities, you can configure the following properties:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TrustStoreLocation"}),": The SAP Cloud SDK adds the provided certificate in the ",(0,s.jsx)(n.code,{children:"ca"})," property of the ",(0,s.jsx)(n.a,{href:"https://nodejs.org/api/tls.html#tlscreatesecurecontextoptions",children:"node client"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TrustAll"}),": The SAP Cloud SDK adds the inverted value as the ",(0,s.jsx)(n.a,{href:"https://nodejs.org/api/tls.html#class-tlstlssocket",children:(0,s.jsx)(n.code,{children:"rejectUnauthorized"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For additional information on trust configuration have a look at ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/guides/trust-and-keystores",children:"the more detailed guide"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["Please use the ",(0,s.jsx)(n.code,{children:"TrustAll"})," with ",(0,s.jsx)(n.strong,{children:"great caution"})," since it opens the gate to man-in-the-middle attacks."]})}),"\n",(0,s.jsx)(n.h3,{id:"jwt-validation",children:"JWT Validation"}),"\n",(0,s.jsxs)(n.p,{children:["If you use JWTs not issued by the XSUAA service, you can configure validation by the destination service using the ",(0,s.jsx)(n.code,{children:"x_user_token.jwks"})," or ",(0,s.jsx)(n.code,{children:"x_user_token.jwks_uri"})," property.\nFor more details on JWTs, have a look at the more detailed ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/guides/retrieve-jwt",children:"guide"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["If you want to use a custom JWT in combination with the destination cache, the JWT must contain the properties ",(0,s.jsx)(n.code,{children:"zid"})," and ",(0,s.jsx)(n.code,{children:"user_id"}),".\nThese properties are used to construct the cache key."]})}),"\n",(0,s.jsx)(n.h3,{id:"additional-headers-and-query-parameters-on-destinations",children:"Additional Headers and Query Parameters on Destinations"}),"\n",(0,s.jsx)(n.p,{children:"The destination service has a convention to define static headers and query parameters on destinations.\nCreate additional properties in your destination in the SAP BTP cockpit and define their values as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"URL.headers.HEADER_KEY"})," for headers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"URL.queries.QUERY_KEY"})," for query parameters"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Replace ",(0,s.jsx)(n.code,{children:"HEADER_KEY"})," and ",(0,s.jsx)(n.code,{children:"QUERY_KEY"})," with the name of the headers or query parameters and set the respective values."]}),"\n",(0,s.jsx)("img",{alt:"Additional properties on destination",src:(0,r.Ay)("img/destination-additional-properties.png"),className:"center"}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the destination has an ",(0,s.jsx)(n.code,{children:"apiKey"})," header with the value ",(0,s.jsx)(n.code,{children:"<my-api-key>"})," and a ",(0,s.jsx)(n.code,{children:"language"})," query parameter with the value ",(0,s.jsx)(n.code,{children:"EN"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK adds those additional headers and query parameters for every communication with the given destination."}),"\n",(0,s.jsx)(n.h3,{id:"forwarding-auth-tokens",children:"Forwarding Auth Tokens"}),"\n",(0,s.jsxs)(n.p,{children:["SAP Cloud SDK provides the option of configuring a destination to directly forward the given JWT to the target system.\nThis behavior can be enabled by setting the ",(0,s.jsx)(n.code,{children:"forwardAuthToken"})," property on the destination to ",(0,s.jsx)(n.code,{children:"true"}),", as shown in the code snippet below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const destination = {\n  name: 'DESTINATION',\n  url: 'https://example.com',\n  forwardAuthToken: true,\n  ...\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now, when you reference the destination in a request, where you pass a JWT, the JWT is passed to the target system in the authorization header."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Sends a request with the JWT in the headers: { authorization: 'Bearer <JWT>' }\nawait req.execute({ destinationName: 'DESTINATION', jwt: '<JWT>' });\n"})}),"\n",(0,s.jsx)(n.p,{children:'Forwarding a JWT is only intended with authentication type "NoAuthentication".\nFor other authentication types the forwarded JWT will override the default authentication which can lead to unexpected behavior.'}),"\n",(0,s.jsxs)(n.p,{children:["Custom authorization headers in the ",(0,s.jsx)(n.code,{children:"requestConfig"})," take precedence over the forwarded JWT."]}),"\n",(0,s.jsxs)(n.p,{children:["This approach only works, if the target system accepts unchanged JWTs.\nIf any transformation is required, e.g., from ",(0,s.jsx)(n.code,{children:"OAuth"})," to ",(0,s.jsx)(n.code,{children:"SamlBearer"}),", it is recommended to use the destination service."]}),"\n",(0,s.jsxs)(n.h4,{id:"html5forwardauthtoken-vs-forwardauthtoken",children:[(0,s.jsx)(n.code,{children:"HTML5.ForwardAuthToken"})," vs. ",(0,s.jsx)(n.code,{children:"forwardAuthToken"})]}),"\n",(0,s.jsxs)(n.p,{children:["To enable token forwarding for destinations in the destination service, set either ",(0,s.jsx)(n.code,{children:"HTML5.ForwardAuthToken"})," or ",(0,s.jsx)(n.code,{children:"forwardAuthToken"})," to ",(0,s.jsx)(n.code,{children:"true"}),".\nEvery other value is interpreted as ",(0,s.jsx)(n.code,{children:"false"}),".\nIf both options are specified only the value passed to ",(0,s.jsx)(n.code,{children:"forwardAuthToken"})," is used."]}),"\n",(0,s.jsx)(n.h4,{id:"rules-of-precedence",children:"Rules of Precedence"}),"\n",(0,s.jsx)(n.p,{children:"The SAP Cloud SDK adds headers and query parameters from different sources.\nSome sources take precedence over others (highest to lowest):"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"custom"}),": headers/query parameters added to a request directly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"additional properties"}),": headers/query parameters defined on a destination"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"internal"}),": headers/query parameters built by the SAP Cloud SDK"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Headers or query parameters built by the SAP Cloud SDK are overwritten by additional headers and query parameters on the destination.\nCustom headers and query parameters, however, overwrite the additional properties."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Header names"})," keep their casing but overwrite other headers independent of the casing, e.g., ",(0,s.jsx)(n.code,{children:"AUTHORIZATION"})," overwrites ",(0,s.jsx)(n.code,{children:"authorization"}),".\nThis does not apply to query ",(0,s.jsx)(n.strong,{children:"parameter names"}),"`."]})}),"\n",(0,s.jsx)(n.h2,{id:"creating-destinations-manually",children:"Creating Destinations Manually"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["This option is ",(0,s.jsx)(n.strong,{children:"not recommended"})," for productive use as you would lose the benefits of separating destinations from applications."]})}),"\n",(0,s.jsxs)(n.p,{children:["You can construct a destination object manually and pass the destination information directly to the ",(0,s.jsx)(n.code,{children:"execute()"})," method.\nA manually constructed destination requires at least a ",(0,s.jsx)(n.code,{children:"url"})," property."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await req.execute({ url: 'https://example.com' });\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);